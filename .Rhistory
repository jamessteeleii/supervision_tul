re_formula = NA)
contrast_prior_tul <- avg_comparisons(model_prior_sample_tul,
variables = "core_assisted",
re_formula = NA)
contrast_tul <- avg_comparisons(model_tul,
variables = "core_assisted",
re_formula = NA)
preds_prior_tul_hu <- avg_predictions(model_prior_sample_tul,
variables = "core_assisted",
re_formula = NA,
dpar = "hu")
preds_tul_hu <- avg_predictions(model_tul,
variables = "core_assisted",
re_formula = NA,
dpar = "hu")
contrast_prior_tul_hu <- avg_comparisons(model_prior_sample_tul,
variables = "core_assisted",
re_formula = NA,
dpar = "hu")
contrast_tul_hu <- avg_comparisons(model_tul,
variables = "core_assisted",
re_formula = NA,
dpar = "hu")
preds_prior_tul_hu
contrast_prior_tul
scales::percent(preds_prior_tul_hu$estimate[2])
scales::percent(contrast_prior_tul_hu$estimate)
preds_tul$estimate[2]+120
preds_tul
targets::tar_load(plot_combined_tul)
plot_combined_tul
targets::tar_load(model_prior_sample_rpe)
targets::tar_load(model_rpe)
targets::tar_load(model_prior_sample_discomfort)
targets::tar_load(model_discomfort)
preds_prior_rpe <- avg_predictions(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
preds_rpe <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_prior_rpe <- avg_comparisons(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_rpe <- avg_comparisons(model_rpe,
variables = "core_assisted",
re_formula = NA)
preds_prior_discomfort <- avg_predictions(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
preds_discomfort <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_prior_discomfort <- avg_comparisons(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_discomfort <- avg_comparisons(model_rpe,
variables = "core_assisted",
re_formula = NA)
preds_prior_rpe <- avg_predictions(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
preds_rpe <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_prior_rpe <- avg_comparisons(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA)
contrast_rpe <- avg_comparisons(model_rpe,
variables = "core_assisted",
re_formula = NA)
preds_prior_discomfort <- avg_predictions(model_prior_sample_discomfort,
variables = "core_assisted",
re_formula = NA)
preds_discomfort <- avg_predictions(model_discomfort,
variables = "core_assisted",
re_formula = NA)
contrast_discomfort <- avg_comparisons(model_discomfort,
variables = "core_assisted",
re_formula = NA)
preds_discomfort
contrast_prior_rpe
preds_prior_rpe
scales::percent(preds_prior_rpe$estimate[2])
targets::tar_load(plot_combined_rpe_discomfort)
plot_combined_rpe_discomfort
contrast_rpe
model_rpe
preds_rpe_dist <- predictions(model_rpe,
variables = "core_assisted")
preds_rpe_dist <- predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)
preds_rpe_dist <- predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)  |>
get_draws()
View(preds_rpe_dist)
preds_rpe_dist <- predictions(model_rpe,
newdata = datagrid(
core_assisted = c("core", "assisted")
),
re_formula = NA)  |>
get_draws()
preds_rpe_dist
preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d()
preds_rpe_dist <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)  |>
get_draws()
plot_preds <- preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
preds_rpe_dist <- predictions(model_rpe,
newdata = datagrid(
core_assisted = c("core", "assisted")
),
re_formula = NA)  |>
get_draws()
plot_preds <- preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
avg_preds_rpe_dist <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA)  |>
get_draws()
plot_avg_preds <- avg_preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
plot_preds / plot_avg_preds
preds_rpe_dist <- predictions(model_rpe,
newdata = datagrid(
core_assisted = c("core", "assisted")
))  |>
get_draws()
plot_preds <- preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
plot_preds / plot_avg_preds
preds_rpe_dist <- predictions(model_rpe,
newdata = datagrid(
core_assisted = c("core", "assisted"),
id = unique(data$id),
location = unique(data$location),
machine = unique(data$machine)
))  |>
get_draws()
preds_rpe_dist <- predictions(model_rpe,
newdata = data)  |>
get_draws()
plot_preds <- preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
plot_preds / plot_avg_preds
preds_rpe_dist <- predictions(model_rpe)  |>
get_draws()
plot_preds <- preds_rpe_dist %>%
ggplot(aes(x=draw)) +
geom_density(aes(fill=core_assisted),alpha=0.5,colour=NA) +
scale_fill_viridis_d() +
theme(panel.background = element_blank(),
panel.grid=element_blank())
plot_preds / plot_avg_preds
ggplot() +
geom_vline(
xintercept = c(90, 120),
linetype = "dashed",
alpha = 0.5,
linewidth = 0.25
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(preds_rpe_dist, core_assisted == "Core"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(preds_rpe_dist, core_assisted == "Assisted"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
scale_color_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_fill_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_x_continuous(limits = c(0,1), labels = scales::percent, breaks = seq(0,1,0.1)) +
labs(
y = "Condition",
x = "Rating of Perceived Effort (%)",
color = "Distribution",
fill = "Distribution"
) +
theme_classic(base_size = 8)
pred_draws <- bind_rows(
predictions(model_prior_sample_rpe) |>
get_draws() |>
mutate(distribution = "prior"),
predictions(model_rpe) |>
get_draws() |>
mutate(distribution = "posterior")
) |>
mutate(core_assisted = factor(
case_when(
core_assisted == "core" ~ "Core",
core_assisted == "assisted" ~ "Assisted"
),
levels = c("Core", "Assisted")
))
ggplot() +
geom_vline(
xintercept = c(90, 120),
linetype = "dashed",
alpha = 0.5,
linewidth = 0.25
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(preds_rpe_dist, core_assisted == "Core"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(preds_rpe_dist, core_assisted == "Assisted"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
scale_color_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_fill_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_x_continuous(limits = c(0,1), labels = scales::percent, breaks = seq(0,1,0.1)) +
labs(
y = "Condition",
x = "Rating of Perceived Effort (%)",
color = "Distribution",
fill = "Distribution"
) +
theme_classic(base_size = 8)
ggplot() +
geom_vline(
xintercept = c(90, 120),
linetype = "dashed",
alpha = 0.5,
linewidth = 0.25
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(pred_draws, core_assisted == "Core"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(pred_draws, core_assisted == "Assisted"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
scale_color_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_fill_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_x_continuous(limits = c(0,1), labels = scales::percent, breaks = seq(0,1,0.1)) +
labs(
y = "Condition",
x = "Rating of Perceived Effort (%)",
color = "Distribution",
fill = "Distribution"
) +
theme_classic(base_size = 8)
model_prior_sample_rpe
library(brms)
pp_check(model_prior_sample_rpe, type = "dens_overlay_grouped", group = "core_assisted")
pred_draws <- bind_rows(
predictions(model_prior_sample_rpe,
allow_new_levels = TRUE,
sample_new_levels = "gaussian") |>
get_draws() |>
mutate(distribution = "prior"),
predictions(model_rpe,
allow_new_levels = TRUE,
sample_new_levels = "gaussian") |>
get_draws() |>
mutate(distribution = "posterior")
) |>
mutate(core_assisted = factor(
case_when(
core_assisted == "core" ~ "Core",
core_assisted == "assisted" ~ "Assisted"
),
levels = c("Core", "Assisted")
))
ggplot() +
geom_vline(
xintercept = c(90, 120),
linetype = "dashed",
alpha = 0.5,
linewidth = 0.25
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(pred_draws, core_assisted == "Core"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
stat_slabinterval(
aes(
y = core_assisted,
x = draw,
color = distribution,
fill = distribution
),
data = filter(pred_draws, core_assisted == "Assisted"),
point_interval = "median_qi",
.width = .95,
slab_alpha = 0.5,
position = position_dodge(w = -0.1),
size = 0.1
) +
scale_color_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_fill_manual(values = c("#56B4E9", "#E69F00"), limits = rev) +
scale_x_continuous(limits = c(0,1), labels = scales::percent, breaks = seq(0,1,0.1)) +
labs(
y = "Condition",
x = "Rating of Perceived Effort (%)",
color = "Distribution",
fill = "Distribution"
) +
theme_classic(base_size = 8)
model_rpe
preds_prior_rpe_phi <- avg_predictions(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA,
dpar = "phi")
preds_prior_rpe_phi
preds_prior_rpe_phi <- avg_predictions(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
preds_prior_rpe_phi
preds_rpe_phi <- avg_predictions(model_rpe,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
preds_discomfort_phi <- avg_predictions(model_discomfort,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
contrast_rpe_phi <- avg_comparisons(model_rpe,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
contrast_rpe_phi
r
contrast_discomfort_phi <- avg_comparisons(model_discomfort,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
contrast_discomfort_phi
preds_prior_rpe_phi
contrast_prior_rpe_phi <- avg_comparisons(model_prior_sample_rpe,
variables = "core_assisted",
re_formula = NA,
dpar = "phi",
type = "link")
contrast_prior_rpe_phi
contrast_discomfort
contrast_discomfort_phi
preds_discomfort_phi
scales::percent(preds_rpe$conf.high[1])
targets::tar_load(data)
unique(data$machine)
targets::tar_load(model_tul)
preds_tul <- avg_predictions(model_tul,
variables = "core_assisted",
re_formula = NA)
# posterior predict functions for hurdle model
posterior_predict_hurdle_student_t <- function(i, prep, ...) {
nu <- brms::get_dpar(prep, "nu", i = i)
mu <- brms::get_dpar(prep, "mu", i = i)
sigma <- brms::get_dpar(prep, "sigma", i = i)
theta <- brms::get_dpar(prep, "hu", i = i)
hu <- runif(prep$ndraws, 0, 1)
ifelse(hu < theta, 0, brms::rstudent_t(prep$ndraws, nu, mu, sigma))
}
preds_tul <- avg_predictions(model_tul,
variables = "core_assisted",
re_formula = NA)
glimpse(preds_tul)
posterior_epred_hurdle_student_t <- function(prep) {
with(prep$dpars, mu * (1 - hu))
}
preds_tul <- avg_predictions(model_tul,
variables = "core_assisted",
re_formula = NA)
glimpse(preds_tul)
preds_round <- preds_tul |> mutate(across(is.numeric(), round))
preds_round <- preds_tul |> mutate(across(is.numeric, round))
View(preds_round)
preds_round <- preds_tul |> mutate(across(is.numeric, round, 2))
View(preds_round)
preds_round <- preds_tul |> mutate(across(where(is.numeric), round, 2))
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
install.packages("grateful")
gratefull::cite_packages(out.format = "pdf", out.dir = "/pre_print")
grateful::cite_packages(out.format = "pdf", out.dir = "/pre_print")
gratefull::cite_packages(out.format = "pdf", out.dir = ".")
grateful::cite_packages(out.format = "pdf", out.dir = ".")
targets::tar_visnetwork()
targets::tar_load(c(model_prior_sample_tul, model_prior_sample_rpe))
targets::tar_load(c(model_tul, model_rpe, model_discomfort))
targets::tar_visnetwork()
targets::tar_make()
targets::tar_load(rhat_prior_sample_tul)
targets::tar_load(rhat_prior_sample_tul)
rhat_main_model
rhat_prior_sample_tul
targets::tar_load(trace_plot_prior_sample_tul)
trace_plot_prior_sample_tul
targets::tar_load(rhat_tul)
rhat_tul
targets::tar_load(trace_plot_tul)
targets::tar_visnetwork()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
visSave(targets::tar_visnetwork(targets_only = TRUE), file = "targets_pipeline.html")
visNetwork::visSave(targets::tar_visnetwork(targets_only = TRUE), file = "targets_pipeline.html")
