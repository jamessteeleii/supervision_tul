"Fit prior models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate effects from\nprevious observational data models",
"Use posteriors from previous observational data models\nas priors for experimental models",
"Fit experimental models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate effects from\nexperimental data models"
),
x = c(0, 6, 3, 0, 0, 3, 6, 3),
y = c(6, 6, 5, 4, 2, 3, 2, 1)
)
# Edges (arrows)
edges <- data.frame(
x = c(0, 6, 3, 0, 0, 3, 6),
y = c(6, 6, 5, 4, 4, 3, 2),
xend = c(0, 6, 0, 3, 0, 6, 3),
yend = c(4, 2, 4, 3, 2, 2, 1)
)
# Plot
ggplot() +
# Arrows
# geom_segment(data = edges, aes(x = x, y = y, xend = xend, yend = yend),
#              arrow = arrow(length = unit(0.25, "cm"), type = "closed"), linewidth = 0.6,
#              arrow.fill = "black") +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
# # Nodes
# geom_mark_rect(
#   data = nodes,
#   aes(x = x, y = y, label = NULL, description = label, group = id),
#   radius = 0.025,
#   fill = "white", color = "#4e4e4e",
#   # label.buffer = unit(1, "cm")
# ) +
# Node labels
# geom_text(data = nodes, aes(x = x, y = y, label = id), size = 4, fontface = "bold") +
geom_label(data = nodes, aes(x = x, y = y, label=label)) +
# Overall formatting
# coord_fixed(ratio = 1.2) +
scale_x_continuous(limits = c(-2,8)) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Prior and Experimental Data",
# caption = "Arrows show data flow. Prior observational data are used to fit initial models,\nwhose posterior distributions inform priors for experimental models.\nBoth datasets are analysed using appropriate regression approaches,\nand posterior estimates are extracted to quantify condition effects."
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label)) +
# scale_x_continuous(limits = c(-2,8)) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Prior and Experimental Data",
# caption = "Arrows show data flow. Prior observational data are used to fit initial models,\nwhose posterior distributions inform priors for experimental models.\nBoth datasets are analysed using appropriate regression approaches,\nand posterior estimates are extracted to quantify condition effects."
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label)) +
scale_x_continuous(limits = c(-2,8)) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Prior and Experimental Data"
)
# Data for nodes
nodes <- data.frame(
id = 1:8,
label = c(
"Previous observational data\n(i.e., TUL, session RPE)",
"Experimental study data\n(i.e., TUL, RPE, RPD)",
"Weakly informative priors",
"Fit prior models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nprevious observational data models",
"Use posteriors from previous observational data models\nas priors for experimental data models",
"Fit experimental models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nexperimental data models"
),
x = c(0, 6, 3, 0, 0, 3, 6, 3),
y = c(6, 6, 5, 4, 2, 3, 2, 1),
model = c("Data", "Data", "Weak prior", "Prior Model", "Prior Model", "Prior Model", "Posterior Model", "Posterior Model")
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Prior and Experimental Data"
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("grey", "#E69F00", "#56B4E9", "white"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models"
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models"
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = NA
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
label = "none"
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model),
show.legend = FALSE) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
)
title = "none",
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
fill = guide_legend(
title = "none",
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
fill = guide_legend(
# title = "none",
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom")
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model), alpha = 0.5) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom")
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model), alpha = 8) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("white", "#E69F00", "#56B4E9", "grey"), limits = rev) +
theme_void() +
theme(
plot.title = element_text(hjust = 0.5, face = "bold"),
plot.caption = element_text(size = 9, hjust = 0),
text = element_text(family = "sans")
) +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom")
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
targets::tar_make()
# Data for nodes
nodes <- data.frame(
id = 1:8,
label = c(
"Previous observational data\n(i.e., TUL, session RPE)",
"Experimental study data\n(i.e., TUL, RPE, RPD)",
"Weakly informative priors",
"Fit prior models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nprevious observational data models",
"Use posteriors from previous observational data models\nas priors for experimental data models",
"Fit experimental models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nexperimental data models"
),
x = c(0, 6, 3, 0, 0, 3, 6, 3),
y = c(6, 6, 5, 4, 2, 3, 2, 1),
model = c("Data", "Data", "Weak prior", "Prior Model", "Prior Model", "Prior Model", "Posterior Model", "Posterior Model")
) |>
mutate(
model = factor(model, levels = c("Data", "Weak Prior", "Prior Model", "Posterior Model"))
)
# Edges (arrows)
edges <- data.frame(
x = c(0, 6, 3, 0, 0, 3, 6),
y = c(6, 6, 5, 4, 4, 3, 2),
xend = c(0, 6, 0, 3, 0, 6, 3),
yend = c(4, 2, 4, 3, 2, 2, 1)
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("grey", "white", "#56B4E9", "#E69F00")) +
theme_void() +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, vjust = 0.5))
# Data for nodes
nodes <- data.frame(
id = 1:8,
label = c(
"Previous observational data\n(i.e., TUL, session RPE)",
"Experimental study data\n(i.e., TUL, RPE, RPD)",
"Weakly informative priors",
"Fit prior models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nprevious observational data models",
"Use posteriors from previous observational data models\nas priors for experimental data models",
"Fit experimental models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nexperimental data models"
),
x = c(0, 6, 3, 0, 0, 3, 6, 3),
y = c(6, 6, 5, 4, 2, 3, 2, 1),
model = c("Data", "Data", "Weak prior", "Prior Model", "Prior Model", "Prior Model", "Posterior Model", "Posterior Model")
) |>
mutate(
model = factor(model, levels = c("Data", "Weak Prior", "Prior Model", "Posterior Model"))
)
# Edges (arrows)
edges <- data.frame(
x = c(0, 6, 3, 0, 0, 3, 6),
y = c(6, 6, 5, 4, 4, 3, 2),
xend = c(0, 6, 0, 3, 0, 6, 3),
yend = c(4, 2, 4, 3, 2, 2, 1)
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("grey", "white", "#56B4E9", "#E69F00")) +
theme_void() +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, vjust = 0.5))
nodes
# Data for nodes
nodes <- data.frame(
id = 1:8,
label = c(
"Previous observational data\n(i.e., TUL, session RPE)",
"Experimental study data\n(i.e., TUL, RPE, RPD)",
"Weakly informative priors",
"Fit prior models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nprevious observational data models",
"Use posteriors from previous observational data models\nas priors for experimental data models",
"Fit experimental models\n(Hurdle Student-t or\nOrdered Beta Regression)",
"Estimate posterior effects from\nexperimental data models"
),
x = c(0, 6, 3, 0, 0, 3, 6, 3),
y = c(6, 6, 5, 4, 2, 3, 2, 1),
model = c("Data", "Data", "Weak Prior", "Prior Model", "Prior Model", "Prior Model", "Posterior Model", "Posterior Model")
) |>
mutate(
model = factor(model, levels = c("Data", "Weak Prior", "Prior Model", "Posterior Model"))
)
# Edges (arrows)
edges <- data.frame(
x = c(0, 6, 3, 0, 0, 3, 6),
y = c(6, 6, 5, 4, 4, 3, 2),
xend = c(0, 6, 0, 3, 0, 6, 3),
yend = c(4, 2, 4, 3, 2, 2, 1)
)
# Plot
ggplot() +
ggarchery::geom_arrowsegment(data = edges,
aes(x = x, xend = xend, y = y, yend = yend),
arrow_positions = 0.5, arrows = arrow(length = unit(0.5, "cm"), type = "closed")) +
geom_label(data = nodes, aes(x = x, y = y, label=label,
fill = model)) +
scale_x_continuous(limits = c(-2,8)) +
scale_fill_manual(values = c("grey", "white", "#56B4E9", "#E69F00")) +
theme_void() +
guides(
fill = guide_legend(
override.aes = aes(label = "")
)
) +
labs(
title = "Modelling Strategy: Previous Observational and Experimental Data and Models",
fill = ""
) +
theme(legend.position = "bottom",
plot.title = element_text(hjust = 0.5, vjust = 0.5))
